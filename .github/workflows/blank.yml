# This is a basic workflow to help you get started with Actions

name: CI


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    environment: development

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: get all schema registry subjects
        env: # Or as an environment variable
          CLIENT_ID: ${{ secrets.CLIENT_ID}}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET}}
          SCHEMA_REGISTRY_URL: ${{ secrets.SCHEMA_REGISTRY_URL}}
          SR_LOGICAL_CLUSTER_ID: ${{ secrets.SR_LOGICAL_CLUSTER_ID}}
          IDENTITY_POOL_ID: ${{ secrets.IDENTITY_POOL_ID}}
          AZURE_TENANT: ${{ secrets.AZURE_TENANT}}
        run: ./get-subjects.sh

      - name: create a new dummy schema
        env: # Or as an environment variable
          CLIENT_ID: ${{ secrets.CLIENT_ID}}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET}}
          SCHEMA_REGISTRY_URL: ${{ secrets.SCHEMA_REGISTRY_URL}}
          SR_LOGICAL_CLUSTER_ID: ${{ secrets.SR_LOGICAL_CLUSTER_ID}}
          IDENTITY_POOL_ID: ${{ secrets.IDENTITY_POOL_ID}}
          AZURE_TENANT: ${{ secrets.AZURE_TENANT}}
        run: ./create-schema.sh

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
